<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soo0.bulletin_board.mapper.BoardMapper">
    <!-- INSERT -->
    <!--
        이 쿼리는 게시판 정보를 데이터베이스에 삽입한다.
        Param: 게시판 정보를 담은 Board 객체
    -->
    <insert id="insert" parameterType="Board">
        insert into board (parent_id, board_name)
        values (#{parentId}, #{boardName})
    </insert>

    <!-- SELECT -->
    <!--
        이 쿼리는 게시판 목록을 생성된 순서대로 조회한다.
    -->
    <select id="selectAll" resultType="BoardInfo">
        select board_id, ifnull(parent_id, board_id) as parent_id, board_name
        from board
        order by parent_id, board_id;
    </select>

    <!--
        이 쿼리는 특정 게시판의 하위 게시판 목록을 생성된 순서대로 조회한다.
        Param: parentId 조회할 게시판 목록의 상위 게시판 ID
    -->
    <select id="selectChildAll" parameterType="int" resultType="BoardInfo">
        select board_id, parent_id, board_name
        from board
        where parent_id = #{parentId}
        order by board_id;
    </select>

    <!--
        이 쿼리는 데이터베이스에 저장된 게시판 개수를 반환한다.
    -->
    <select id="count" resultType="int">
        select count(*) from board;
    </select>

    <!-- UPDATE -->
    <!--
        이 쿼리는 boardId가 일치하는 게시판의 정보를 수정한다.
        Param: 게시판 정보를 담은 Board 객체
    -->
    <update id="update" parameterType="Board">
        update board
        set board_name = #{boardName}
        where board_id = #{boardId};
    </update>

    <!-- 게시판 위치 변경 -->

    <!-- DELETE -->
    <!--
        이 쿼리는 boardId가 일치하는 게시판을 삭제한다.
        Param: boardId 삭제할 게시판 ID
    -->
    <delete id="delete" parameterType="int">
        delete
        from board
        where board_id = #{boardId};
    </delete>
</mapper>